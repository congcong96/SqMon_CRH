function [sig, RI, p, strfcorr] = calc_strf_RI_v3(stimmat, spktrain, niter, nleads, nlags)
% RELIABILITY INDEX OF STRF
% Based on Escabi et al., 2014 (J. Neurophysiol)/Jermy second paper
% 
% Determine if the STRF is stable over time
% The RI of the STRF is compared to the null distribution of RIs of nSTRFs
% First, the response is divided into 10 segments to calculate 10 STRFs
% Then, random 5 STRFs are summed to get STRFa and the rest is combined to
% STRFb, the correlation value if STRFa and STRFb is the similarity index.
% RI is the mean of 100 SI
% null correlation distribution is generated by circular shift spike train 100 times

% Inputs:
%   stimmat: half ms bined stimulus matrix
%   spktrain: result of ne_batch_save_halfms_binned_spktrain_v2({files.name}, stimfile, 1);
%   niter: number of iteration to calculate reliability index distribution, 
%             default = 100
%   
% Outputs:
%   sig: significance of the reliability index of the unit
%   RI: reliability index of the unit
%   strfcorr: (RI_iter * 1) distribution of correlation of the neuron
%   nstrfcorr: (RI_iter*#shift * 1) null distribution of correlation
%
% Written by Congcong, 12/02/2020.
if nargin == 2
    niter = 100;
    nleads = 0;
    nlags = 20;
end
nshift = 100;

    segmentlength = ceil(length(spktrain)/10);
segmentstart = segmentlength*(0:9)+1;
segmentend = [segmentlength*(1:9) length(spktrain)];

shiftsize = floor(length(spktrain)/(nshift+1));
spktrainshift = zeros(1+nshift, length(spktrain));
spktrainshift(1,:) = spktrain;
for ii = 2:nshift+1
    spktrainshift(ii,:) = circshift(spktrainshift(ii-1,:), shiftsize);
end


sta = zeros(size(spktrainshift,1), size(stimmat,1)*(nleads+nlags), 10);
for ii = 1:10 %calculate strf for 10 segments
    wstart = segmentstart(ii);
    wend = segmentend(ii);
    sta(:,:,ii) = quick_calc_sta(stimmat(:,wstart:wend), spktrainshift(:,wstart:wend), 'nlags', nlags, 'nleads', nleads, 'suppressprint', 1);
end

strfcorr = zeros(1+nshift, niter);
for ii = 1:niter
    idx = randperm(10);
    STRFa = squeeze(sum(sta(:,:,idx(1:5)),3));
    STRFb = squeeze(sum(sta(:,:,idx(6:10)),3));
    strfcorr(:,ii) = arrayfun(@(k) corr(STRFa(k,:)', STRFb(k,:)'), 1:(1+nshift), 'Uni', 1);
end

RI = mean(strfcorr(1,:), 'omitnan');
p = sum(sum(strfcorr(2:end,:)>RI))/sum(sum(~isnan(strfcorr(2:end,:))));
if p < 0.05
    sig = 1;
else
    sig = 0;
end


